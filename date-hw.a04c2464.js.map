{"mappings":"ACAA,MAAM,eACF,YAAY,CAAQ,CAAE,CAAI,CAAC,CACvB,IAAI,CAAC,SAAS,CAAG,SAAS,aAAa,CAAC,GACxC,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,KAAK,EACd,CAGA,OAAO,CACH,IAAI,CAAC,MAAM,GACX,IAAI,CAAC,QAAQ,CAAG,YAAY,IAAM,IAAI,CAAC,MAAM,GAAI,IACrD,CAEA,QAAQ,CACJ,IAAM,EAAO,IAAI,CAAC,IAAI,CAAC,OAAO,GAAK,KAAK,GAAG,GAE3C,GAAG,AAAS,IAAT,EAAW,YACV,cAAc,IAAI,CAAC,QAAQ,EAI/B,IAAM,EAAO,KAAK,KAAK,CAAC,EAAQ,OAC1B,EAAQ,KAAK,KAAK,CAAE,EAAQ,MAAyB,MACrD,EAAO,KAAK,KAAK,CAAE,EAAQ,KAAoB,KAC/C,EAAO,KAAK,KAAK,CAAE,EAAQ,IAAc,IAI/C,CAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,uBAAuB,WAAW,CAAG,EAAK,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAC9F,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,wBAAwB,WAAW,CAAG,EAAM,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAChG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,uBAAuB,WAAW,CAAG,EAAK,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAC9F,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,uBAAuB,WAAW,CAAG,EAAK,QAAQ,GAAG,QAAQ,CAAC,EAAG,IAElG,CACJ,CAEA,IAAI,eAAe,WAAY,IAAI,KAAK","sources":["<anon>","src/index.js"],"sourcesContent":["class CountdownTimer {\n    constructor(selector, data){\n        this.timerElem = document.querySelector(selector);\n        this.data = data;\n        this.start();\n    }\n    start() {\n        this.update();\n        this.interval = setInterval(()=>this.update(), 1000);\n    }\n    update() {\n        const time = this.data.getTime() - Date.now();\n        if (time === 0) {\n            clearInterval(this.interval);\n            return;\n        }\n        const days = Math.floor(time / 86400000);\n        const hours = Math.floor(time % 86400000 / 3600000);\n        const mins = Math.floor(time % 3600000 / 60000);\n        const secs = Math.floor(time % 60000 / 1000);\n        this.timerElem.querySelector('[data-value=\"days\"]').textContent = days.toString().padStart(2, \"0\");\n        this.timerElem.querySelector('[data-value=\"hours\"]').textContent = hours.toString().padStart(2, \"0\");\n        this.timerElem.querySelector('[data-value=\"mins\"]').textContent = mins.toString().padStart(2, \"0\");\n        this.timerElem.querySelector('[data-value=\"secs\"]').textContent = secs.toString().padStart(2, \"0\");\n    }\n}\nnew CountdownTimer(\"#timer-1\", new Date(\"Jun 17, 2025\"));\n\n//# sourceMappingURL=date-hw.a04c2464.js.map\n","class CountdownTimer{\r\n    constructor(selector, data){\r\n        this.timerElem = document.querySelector(selector)\r\n        this.data = data\r\n        this.start()\r\n    }\r\n    \r\n\r\n    start(){\r\n        this.update()\r\n        this.interval = setInterval(() => this.update(), 1000)\r\n    }\r\n\r\n    update(){\r\n        const time = this.data.getTime() - Date.now();\r\n\r\n        if(time === 0){\r\n            clearInterval(this.interval)\r\n            return\r\n        }\r\n\r\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n        const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n\r\n\r\n        this.timerElem.querySelector('[data-value=\"days\"]').textContent = days.toString().padStart(2, \"0\");\r\n        this.timerElem.querySelector('[data-value=\"hours\"]').textContent = hours.toString().padStart(2, \"0\");\r\n        this.timerElem.querySelector('[data-value=\"mins\"]').textContent = mins.toString().padStart(2, \"0\");\r\n        this.timerElem.querySelector('[data-value=\"secs\"]').textContent = secs.toString().padStart(2, \"0\");\r\n\r\n    }\r\n}\r\n\r\nnew CountdownTimer(\"#timer-1\", new Date(\"Jun 17, 2025\"));\r\n"],"names":["CountdownTimer","constructor","selector","data","timerElem","document","querySelector","start","update","interval","setInterval","time","getTime","Date","now","clearInterval","days","Math","floor","hours","mins","secs","textContent","toString","padStart"],"version":3,"file":"date-hw.a04c2464.js.map"}